[build-system]
requires = ['flit_core>=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-phonopy'
dynamic = ['version']
description = 'The official AiiDA plugin for Phonopy'
authors = [
    {name = 'Lorenzo Bastonero', email = 'bastonero.lorenzo@gmail.com'}
]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Topic :: Scientific/Engineering :: Physics',
    'Topic :: Scientific/Engineering :: Chemistry',
]
keywords = ['aiida', 'phonopy', 'workflows']
requires-python = '>=3.8'
dependencies = [
    "aiida-core>=2.0.0,<3.0.0",
    "phonopy>=2.14,<3.0.0",
]

[project.urls]
Source = "https://github.com/aiida-phonopy/aiida-phonopy"

[project.optional-dependencies]
pre-commit = [
    'pre-commit~=2.17',
    'pylint==2.17.2',
    'pylint-aiida~=0.1.1',
    'toml',
]
tests = [
    'pgtest~=1.3',
    'pytest~=6.0',
    'pytest-regressions~=2.3',
]
docs = [
    'myst-nb~=0.17',
    'jupytext>=1.11.2,<1.15.0',
    # 'sphinx-book-theme==1.0.0rc2',
    # 'sphinx-design2',
    # 'sphinx-autodoc2~=0.4.2',
    'sphinx-togglebutton',
    'sphinx~=5.2',
    'sphinx-copybutton~=0.5.2',
    'sphinx-book-theme~=1.0.1',
    # 'sphinx-click~=4.4.0',
    'sphinx-design~=0.4.1',
    'sphinxcontrib-details-directive~=0.1.0',
    'sphinx-autoapi~=2.0.1',
    #'myst_parser~=1.0.0',
]

[project.entry-points.'aiida.data']
'phonopy.raw' = 'aiida_phonopy.data.raw:RawData'
'phonopy.preprocess' = 'aiida_phonopy.data.preprocess:PreProcessData'
'phonopy.phonopy' = 'aiida_phonopy.data.phonopy:PhonopyData'
'phonopy.force_constants' = 'aiida_phonopy.data.force_constants:ForceConstantsData'

[project.entry-points.'aiida.calculations']
'phonopy.phonopy' = 'aiida_phonopy.calculations.phonopy:PhonopyCalculation'

[project.entry-points.'aiida.parsers']
'phonopy.phonopy' = 'aiida_phonopy.parsers.phonopy:PhonopyParser'

[project.entry-points.'aiida.workflows']
'phonopy.phonopy' = 'aiida_phonopy.workflows.phonopy:PhonopyWorkChain'

[tool.flit.module]
name = 'aiida_phonopy'

[tool.flit.sdist]
exclude = [
    'tests/',
    'docs/',
]

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3

[tool.pydocstyle]
ignore = [
    'D104',
    'D203',
    'D213'
]

[tool.pylint.basic]
good-names = [
    "_",
    "x",
    "y",
    "z",
    "i",
    "j",
    "k",
    "l",
    "dph0_",
    "nlo_",
]

[tool.pylint.master]
load-plugins = ['pylint_aiida']
ignore-paths= [
    'tests/*',
    'docs/*',
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    'protected-access',
    'duplicate-code',
    'import-outside-toplevel',
    'inconsistent-return-statements',
    'invalid-name',
    'no-member',
    'too-many-arguments',
    'too-many-branches',
    'too-many-locals',
    'too-many-statements',
    'too-many-public-methods',
    'arguments-differ',
]

[tool.yapf]
align_closing_bracket_with_visual_indent = true
based_on_style = 'google'
coalesce_brackets = true
column_limit = 120
dedent_closing_brackets = true
indent_dictionary_value = false
split_arguments_when_comma_terminated = true
