name: cd

on:
    push:
        tags:
        -   'v[0-9]+.[0-9]+.[0-9]+*'

jobs:

    validate-release-tag:

        if: github.repository == 'aiida-phonopy/aiida-phonopy'
        runs-on: ubuntu-latest

        steps:
        -   name: Checkout source
            uses: actions/checkout@v2

        -   name: Set up Python 3.8
            uses: actions/setup-python@v2
            with:
                python-version: '3.8'

        -   name: Validate the tag version against the package version
            run: python .github/workflows/validate_release_tag.py $GITHUB_REF

    pre-commit:

        needs: [validate-release-tag]
        runs-on: ubuntu-latest

        steps:
        -   uses: actions/checkout@v2

        -   name: Cache Python dependencies
            uses: actions/cache@v1
            with:
                path: ~/.cache/pip
                key: pip-pre-commit-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-pre-commit-

        -   name: Set up Python
            uses: actions/setup-python@v2
            with:
                python-version: '3.8'

        -   name: Install Python dependencies
            run: pip install -e .[pre-commit,tests]

        -   name: Run pre-commit
            run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    tests:

        needs: [validate-release-tag]
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                include:
                -   python-version: '3.8'
                    phonopy-version: '2.14.0'
                -   python-version: '3.9'
                    phonopy-version: '2.15.0'
                -   python-version: '3.10'
                    phonopy-version: '2.16.3'
                -   python-version: '3.11'
                    phonopy-version: '2.16.3'

        services:
            postgres:
                image: postgres:12
            rabbitmq:
                image: rabbitmq:latest
                ports:
                -   5672:5672

        steps:
        -   uses: actions/checkout@v2

        -   name: Cache Python dependencies
            uses: actions/cache@v1
            with:
                path: ~/.cache/pip
                key: pip-${{ matrix.python-version }}-tests-${{ hashFiles('**/setup.json') }}
                restore-keys:
                    pip-${{ matrix.python-version }}-tests

        -   name: Setup Conda
            uses: s-weigand/setup-conda@v1
            with:
                python-version: ${{ matrix.python-version }}
                conda-channels: conda-forge

        -   name: Set up Phonopy ${{ matrix.phonopy-version }}
            run: conda install -y phonopy==${{ matrix.phonopy-version }}

        -   name: Install Python dependencies
            run: pip install -e .[tests]

        -   name: Run pytest
            run: pytest -sv tests

    publish:

        name: Publish to PyPI
        needs: [pre-commit, tests]
        runs-on: ubuntu-latest

        steps:
        -   name: Checkout source
            uses: actions/checkout@v2

        -   name: Set up Python 3.8
            uses: actions/setup-python@v2
            with:
                python-version: '3.8'

        -   name: Install flit
            run: pip install flit~=3.4

        # -   name: Build and publish to TestPyPI
        #     run: flit publish --repository https://test.pypi.org/legacy/
        #     env:
        #         FLIT_USERNAME: __token__
        #         FLIT_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}

        -   name: Build and publish
            run: flit publish
            env:
                FLIT_USERNAME: __token__
                FLIT_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
